<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <security:http auto-config="true" entry-point-ref="casAuthenticationEntryPoint">

        <security:intercept-url pattern="/page/score.jsp" access="ROLE_EMPLOYEE"/>
        <security:custom-filter position="CAS_FILTER" ref="casAuthenticationFilter" />
        <security:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />  
        <security:custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
    </security:http>


    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider" />
    </security:authentication-manager>

    <!-- This section is used to configure CAS. The service is the actual redirect that will be triggered after the CAS login 
    sequence. -->
    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="http://10.2.1.183:8080/TRS/j_spring_cas_security_check"></property>
        <property name="sendRenew" value="false"></property>
    </bean>

    <!-- The CAS filter handles the redirect from the CAS server and starts the ticket validation. -->
    <bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"></property>
    </bean>

    <!-- The entryPoint intercepts all the CAS authentication requests. It redirects to the CAS loginUrl for the CAS login page. -->
    <bean id="casAuthenticationEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="https://gdccas.perficient.com/login"></property>
        <property name="serviceProperties" ref="serviceProperties"></property>
    </bean>
	
    <!-- Handles the CAS ticket processing. -->
    <bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="authenticationUserDetailsService" ref="authenticationUserDetailsService" />
        <property name="serviceProperties" ref="serviceProperties"></property>
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="http://gdccas.perficient.com/" />
            </bean>
        </property>
        <property name="key" value="cas"></property>

    </bean>

    <!-- logout the client -->  
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />  
          
    <!-- logout the server -->  
    <bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <constructor-arg value="http://gdccas.perficient.com/logout?service=http://10.2.1.183:8080/TRS/page/score.jsp" />  
        <constructor-arg>  
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />  
        </constructor-arg>
        <property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
    </bean>  

    <bean id="authenticationUserDetailsService" class="com.perficient.talentreviewsystem.serviceimpl.LoginService">
    </bean>
</beans>

